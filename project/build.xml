<project name="juel" default="dist" basedir="." xmlns:jacoco="antlib:org.jacoco.ant">
	<property file="build.properties" />

	<property name="version" value="2.2.2-SNAPSHOT" />

	<property name="build.dir" value="build" />
	<property name="dist.dir" value="dist" />

	<property name="junit.jar" value="lib/junit.jar" />

	<taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
		<classpath>
			<pathelement location="lib/jacocoant.jar"/>
		</classpath>
	</taskdef>

	<target name="clean" description="cleanup build directory">
		<delete dir="${build.dir}" />
	</target>

	<target name="modules" description="build juel modules">
		<ant antfile="../modules/build.xml" inheritall="false" target="dist">
			<property name="build.dir" location="${build.dir}" />
			<property name="junit.jar" location="${junit.jar}" />
			<property name="version" value="${version}" />
		</ant>
	</target>

	<target name="coverage" depends="modules" description="compile and run unit tests">
		<jacoco:coverage file="${build.dir}/jacoco/jacoco.exec" merge="false">
			<junit printsummary="false" haltonfailure="true" fork="true" forkmode="once">
				<classpath>
					<pathelement location="${junit.jar}" />
					<pathelement location="${build.dir}/juel-${version}.jar" />
					<pathelement location="${build.dir}/classes-test" />
				</classpath>
				<test name="javax.el.AllTests">
					<formatter type="plain" usefile="false" />
				</test>
				<test name="de.odysseus.el.AllSuites">
					<formatter type="plain" usefile="false" />
				</test>
			</junit>
		</jacoco:coverage>
	</target>

	<target name="reports" depends="coverage" description="build juel reports">
		<jacoco:report>
			<executiondata>
				<fileset file="${build.dir}/jacoco/jacoco.exec"/>
			</executiondata>
			<structure name="juel-${version}">
				<classfiles>
					<fileset file="${build.dir}/juel-${version}.jar"/>
				</classfiles>
				<!--
				<sourcefiles>
					<fileset dir="../modules/api/src/main/java"/>
					<fileset dir="../modules/impl/src/main/java"/>
				</sourcefiles>
				-->
			</structure>
			<html destdir="${build.dir}/jacoco"/>
		</jacoco:report>
		<stan.report name="juel-${version}" level="member" preferences="metrics.xml"
			outdir="${build.dir}/stan">
			<libraries>
				<path location="${build.dir}/juel-api-${version}.jar"/>
				<path location="${build.dir}/juel-impl-${version}.jar"/>
			</libraries>
		</stan.report>
		<move 
			tofile="${build.dir}/stan/index.html"
			file="${build.dir}/stan/juel-${version}.html"/>
	</target>

	<target name="dist" depends="clean,modules" description="build juel distribution">
		<ant antfile="doc/build.xml" inheritall="false" target="dist">
			<property name="build.dir" location="${build.dir}/forrester" />
		</ant>
		<mkdir dir="${dist.dir}"/>
		<zip destfile="${dist.dir}/juel-${version}.zip">
			<zipfileset prefix="juel-${version}" dir="..">
				<include name="LICENSE.txt" />
				<include name="README.txt" />
				<include name=".project" />
				<include name=".classpath" />
				<include name="modules/**" />
				<exclude name="modules/build/**" />
				<exclude name="modules/*/target/**" />
				<exclude name="modules/.*" />
				<include name="samples/**" />
			</zipfileset>
			<zipfileset prefix="juel-${version}" dir="${build.dir}">
				<include name="juel-${version}.jar" />
				<include name="juel-${version}-sources.jar" />
				<include name="juel-api-${version}.jar" />
				<include name="juel-impl-${version}.jar" />
				<include name="juel-spi-${version}.jar" />
			</zipfileset>
			<zipfileset prefix="juel-${version}/doc" dir="${build.dir}/forrester">
				<include name="**" />
			</zipfileset>
			<zipfileset prefix="juel-${version}/doc/api" dir="${build.dir}/javadoc">
				<include name="**" />
			</zipfileset>
		</zip>
	</target>

</project>